type Query {
    """
    Get details of the genre
    -------------------------------
    More info in ["Video Games select genre details"](https://api.rawg.io/docs/#operation/genres_list)
    """ 
    genre(
      """ 
      A unique integer value identifying this Genre. For example,
      pass "3" id to take 'Adventure' genre details
      """
      id: String!): ResultGenre
    """
    Get a list of video game genres
    -------------------------------
    More info in ["Video Games genres List"](https://api.rawg.io/docs/#operation/genres_list)
    """ 
    genres: ResultGenres
    game(id: ID!): ResultGame
    games(page: Int = 1, itemsPage: Int = 20): ResultGames
    platforms(save: Boolean = false): ResultPlatforms
    platform(id: ID!): ResultPlatform
    tags(page: Int = 1, itemsPage: Int = 20): ResultTags
    tag(id: ID!): ResultTag
}

interface Result {
    status: Boolean!
    message: String!
}

type ResultGame implements Result {
  status: Boolean!
  message: String!
  game: Game
}

type ResultTag implements Result {
  status: Boolean!
  message: String!
  tag: Tag
}

type ResultGenre implements Result {
  status: Boolean!
  message: String!
  genre: Genre
}

type ResultGenres implements Result {
  status: Boolean!
  message: String!
  count: Int!
  next: String
  previous: String
  results: [Genre!]!
}

type ResultGames implements Result {
  status: Boolean!
  message: String!
  page: Int!
  itemsPage: Int!
  count: Int!
  totalPages: Int!
  next: String
  previous: String
  results: [Game!]!
}

type ResultTags implements Result {
  status: Boolean!
  message: String!
  page: Int!
  itemsPage: Int!
  count: Int!
  next: String
  totalPages: Int!
  previous: String
  results: [Tag!]!
}

type ResultPlatforms implements Result {
  status: Boolean!
  message: String!
  count: Int!
  next: String
  previous: String
  results: [Platform]
}

type ResultPlatform implements Result {
  status: Boolean!
  message: String!
  platform: Platform
}

type Genre {
  ## Genre id value
  id: ID!
  ## Genre name 
  name: String!
  ## Genre slug value. Same name but in lowercase
  slug: String!
  ## Number games correspoding to select genre  
  games_count: Int!
  image_background: String!
  ## Most populars first games
  games: [Game!]!
  following: Boolean
}

type RatingInfo {
  value: Float!
  top: Float!
  count: Int!
  info: String!
}

type Game {
  id: ID!
  slug: String!
  name: String!
  added: Int
  released: String
  tba: Boolean
  img: String
  rating: RatingInfo
  ratings: [Rating]
  reviews_text_count: Int!
  added_by_status: AddedByStatus
  metacritic: Float!
  playtime: Int!
  suggestions_count: Int!
  user_game: String
  reviews_count: Int!
  saturated_color: String
  dominant_color: String
  platforms: [Platforms]
  platformsIds: [ID!]!
  genres: [Genre!]!
  description: String
  ## stores: [StoreData]
  clip: Clip
  tags: [Tag]
  tagsIds: [ID!]!
  ## short_screenshots: ShortScreenshot[]
}

type Tag {
  id: ID!
  name: String!
  slug: String!
  img: String!
}

type Clip {
  clip: String!
  clips: Clips!
  video: String!
  preview: String!
}

type Clips {
  low: String!
  medium: String!
  full: String!
}

type Rating {
  id: ID!
  title: String!
  count: Int!
  percent: Float!
}

type AddedByStatus {
    yet: Int!
    owned: Int!
    beaten: Int!
    toplay: Int!
    dropped: Int!
    playing: Int!
}

type Platform {
  id: ID!
  name: String!
  slug: String!
  gamesTotal: Int
  img: String
}

type Year {
  start: String
  end: String
}

type Platforms {
  platform: Platform!
  released_at: String!
  requirements: Requirements
}

type Requirements {
  minimum: String
  maximum: String
}
